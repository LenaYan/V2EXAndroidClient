apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'com.frogermcs.androiddevmetrics'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'

//apply plugin: 'android-apt'

//apt {
//    processor 'com.dslplatform.json.CompiledJsonProcessor'
//}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            shrinkResources false
        }
        release {
            minifyEnabled false
            debuggable false
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    dexOptions {
        javaMaxHeapSize "2048M"
    }
}

retrolambda {
//    jdk System.getenv("JAVA8_HOME")
//    oldJdk System.getenv("JAVA7_HOME")
    javaVersion rootProject.ext.retrolambdaJavaVersion
//    jvmArgs '-arg1', '-arg2'
//    defaultMethods false
//    incremental true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':Library')

    apt depMap.DaggerCompile

    debugCompile depMap.LeakCanary
    releaseCompile depMap.LeakCanaryAndroidNoOp
    testCompile depMap.LeakCanaryAndroidNoOp

    // Dependencies for local unit tests
    testCompile depMap.JUnit
    testCompile depMap.MockitoAll
    testCompile depMap.Hamcrest

    // Android Testing Support Library's runner and rules
    androidTestCompile depMap.RunnerSupport
    androidTestCompile depMap.RulesSupport

    // Dependencies for android unit tests
    androidTestCompile depMap.JUnit
    androidTestCompile depMap.FestAssert
    androidTestCompile depMap.FestAndroid
    androidTestCompile depMap.Robolectric
    androidTestCompile depMap.MockitoCore
    androidTestCompile depMap.DexMaker
    androidTestCompile depMap.DexMakerMockito
    androidTestCompile depMap.EspressoCore
    androidTestCompile depMap.EspressoContrib
    androidTestCompile depMap.EspressoIntents
    androidTestCompile depMap.Annotations
    androidTestCompile depMap.SupportV4
    androidTestCompile depMap.AppCompat
    androidTestCompile depMap.Design
    androidTestCompile depMap.RecyclerView
    androidTestCompile depMap.UIAutomator
}